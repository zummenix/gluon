[package]

name = "gluon"
version = "0.6.2" # GLUON
authors = ["Markus <marwes91@gmail.com>"]
build = "build.rs"

license = "MIT"

description = "A static, type inferred programming language for application embedding"

repository = "https://github.com/gluon-lang/gluon"
documentation = "https://docs.rs/gluon"
readme = "README.md"

[workspace]
members = ["c-api", "repl"]

[lib]

name = "gluon"
path = "src/lib.rs"

[dependencies]
gluon_base = { path = "base", version = "0.6.2" } # GLUON
gluon_check = { path = "check", version = "0.6.2" } # GLUON
gluon_parser = { path = "parser", version = "0.6.2" } # GLUON
gluon_vm = { path = "vm", version = "0.6.2" } # GLUON

log = "0.3.6"
quick-error = "1.0.0"
collect-mac = "0.1.0"
either = "1.0.0"
itertools = "0.6.0"
futures = "0.1.11"

serde = { version = "1.0.0", optional = true }
serde_state = { version = "0.4.0", optional = true }
serde_derive_state = { version = "0.4.0", optional = true }

# Binding crates
regex = { version = "0.2.1", optional = true }

# Crates used in testing Testing
compiletest_rs = { version = "0.3", optional = true }
skeptic = { version = "0.6", optional = true }

[build-dependencies]
skeptic = { version = "0.6", optional = true }

[dev-dependencies]
bencher = "0.1.2"
collect-mac = "0.1.0"
env_logger = "0.3.4"

hyper = "0.11.0"
curl = "0.4.1"

serde = "1.0.0"
serde_derive = "1.0.0"
serde_derive_state = { version = "0.4.0" }
serde_json = "1.0.0"
bincode = "0.8.0"

gluon_completion = { path = "completion", version = "0.6.2" } # GLUON

[features]
default = ["regex"]
serialization = ["serde", "serde_state", "serde_derive_state", "gluon_vm/serialization"]

test = ["serialization", "gluon_vm/test", "gluon_check/test", "gluon_parser/test"]
nightly = ["compiletest_rs"]


[[bench]]
name = "check"
harness = false

[[bench]]
name = "function_call"
harness = false

[[bench]]
name = "parser"
harness = false

[[bench]]
name = "precompiled"
harness = false
